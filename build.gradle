// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {

        google()
        mavenCentral()
        gradlePluginPortal()

        // aliyun maven
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        // mirror of google()
        maven { url 'https://maven.aliyun.com/repository/google' }
        // mirror of central & jcenter
        maven { url 'https://maven.aliyun.com/repository/public' }
        // mirror of gradlePluginPortal
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath 'com.github.kezong:fat-aar:1.3.8'
        classpath "io.github.gradle-nexus:publish-plugin:1.3.0"
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
apply plugin: 'io.github.gradle-nexus.publish-plugin'

allprojects { project ->
    apply plugin: 'maven-publish'

    group = 'com.alibaba.pdns'
    version = '2.2.7'
    repositories {
        flatDir{
            dirs 'libs'
        }
        google()
        mavenCentral()
    }
}

// java library 没有assembleRelease task，这里定义一个，并代理assemble task
task assembleRelease

gradle.projectsEvaluated {
    subprojects { subproject ->
        if (subproject.tasks.findByPath('assemble') != null) {
            if (subproject.plugins.hasPlugin('java-library')) {
                assembleRelease.dependsOn subproject.tasks.assemble
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/") //注意地址
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots")
            packageGroup = "com.alibaba.pdns" //groupId，必填
        }
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}
