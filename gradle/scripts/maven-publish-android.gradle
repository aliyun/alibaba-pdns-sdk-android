apply plugin: 'maven-publish'
apply plugin: 'signing'

def moduleName = project.name
def moduleVersion = project.version
project.archivesBaseName = moduleName

println "============= publish -->> moduleName: " + moduleName + " ============="
println "============= publish -->> moduleVersion: " + moduleVersion + " ============="

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.java.source
    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "com.alibaba.pdns"
            artifactId "alidns-android-sdk"
            version "2.2.7"

            artifact("$buildDir/outputs/aar/alidns-android-sdk-2.2.7.aar")
            artifact androidSourcesJar

            pom {
                name = "pdnsdk"
                description = 'Aliyun Pdns SDK for Android\n' +
                        '      Copyright (C) Alibaba Cloud Computing\n' +
                        '      All rights reserved.\n' +
                        '      版权所有 （C）阿里云计算有限公司\n' +
                        '      http://www.aliyun.com'
                url = 'https://github.com/aliyun/alibaba-pdns-sdk-android'

                licenses {
                    license {
                        name = 'The MIT License'
                        url = 'https://opensource.org/license/mit'
                    }
                }

                developers {
                    developer {
                        id = "pdns"
                        name = "pdnsdk"
                        email = "wb-xh839484@alibaba-inc.com"
                    }
                }

                scm {
                    url = 'https://github.com/aliyun/alibaba-pdns-sdk-android/tree/master'
                    connection = 'https://github.com/aliyun/alibaba-pdns-sdk-android.git'
                    developerConnection = 'https://github.com/aliyun/alibaba-pdns-sdk-android.git'
                }

                withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    project.configurations.all { configuration ->
                        def name = configuration.name
                        if (name != "implementation" && name != "compile" && name != "api") {
                            return
                        }
                        println(configuration)
                        configuration.dependencies.each {
                            println(it)
                            if (it.name == "unspecified" || it.version == 'unspecified') {
                                // 忽略无法识别的
                                return
                            }
                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                            if (name == "api" || name == "compile") {
                                dependencyNode.appendNode("scope", "compile")
                            } else { // implementation
                                dependencyNode.appendNode("scope", "runtime")
                            }
                        }
                    }
                }
            }
        }
    }
}

signing {
    sign publishing.publications
}