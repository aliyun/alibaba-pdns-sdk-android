apply plugin: 'com.android.library'
apply plugin: 'com.kezong.fat-aar'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    sourceSets {
        main {
            java.srcDirs = ['jcenter_src', 'src/main/java']
        }
    }
    packagingOptions {
        exclude 'META-INF/atomicfu.kotlin_module'
        // 如果你有其他的.kotlin_module文件，也需要在这里排除
    }
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        externalNativeBuild {
            cmake {
                cppFlags "" // 默认编译出 4 种 CPU 架构指令平台的 .so 库
                arguments "-DANDROID_PAGE_SIZE_ALIGNMENT=16384"
            }
        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false" // 不显示 Log
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
//        cmake {
//            path "CMakeLists.txt"
//        }
    }
    ndkVersion = '21.4.7075529'

    lintOptions {
        abortOnError false
    }

    useLibrary 'org.apache.http.legacy'

    /*********此 gradle 命令编译出 aar 包将 jar 包和 .so 动态库打包在一起用户不用关心里面的动态库注册只集成 aar 即可*********/
    libraryVariants.all { variant ->
        def newLibName = "alidns-android-sdk-2.2.8.aar"
        variant.outputs.all {
            outputFileName = newLibName
        }
    }
    /*********此 gradle 命令编译出 aar 包将 jar 包和 .so 动态库打包在一起用户不用关心里面的动态库注册只集成 aar 即可*********/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}
allprojects {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/public/'
        }
        mavenLocal()
        mavenCentral()
    }
}
dependencies {
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.android.support:support-annotations:25.1.1'
    embed(name:'alidns-android-sdk-2.2.8',ext:'aar')
}

apply from: rootProject.file('gradle/scripts/maven-publish-android.gradle')

